{"filter":false,"title":"test_views.py","tooltip":"/todo/test_views.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":26,"column":47},"action":"insert","lines":["from django.test import TestCase","from .models import Item","","","class TestViews(TestCase):","","    def test_get_home_page(self):","        page = self.client.get(\"/\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"todo_list.html\")","    ","    def test_get_add_item_page(self):","        page = self.client.get(\"/add\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_item_page(self):","        item = Item(name=\"Create a Test\")","        item.save()","","        page = self.client.get(\"/edit/{0}\".format(item.id))","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_page_for_item_that_does_not_exist(self):","        page = self.client.get(\"/edit/1\")","        self.assertEqual(page.status_code, 404)"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":4,"column":26},"end":{"row":4,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1562163306065,"hash":"86f1e9d6427c4b4698d26d204b5f222fc3929a7c"}